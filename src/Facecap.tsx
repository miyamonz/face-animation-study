/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useMemo, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { GUI } from "lil-gui";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    eyeLeft: THREE.Mesh;
    eyeRight: THREE.Mesh;
    teeth: THREE.Mesh;
    head: THREE.Mesh;
  };
  materials: {
    lambert5: THREE.MeshStandardMaterial;
  };
};

const url = "/facecap.glb";
export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials, animations } = useGLTF(
    url
  ) as unknown as GLTFResult;

  const head = nodes.head;
  const mixer = useMemo(() => {
    const mixer = new THREE.AnimationMixer(head);
    console.log(animations);
    for (const animation of animations) {
      console.log(animation);
      mixer.clipAction(animation).play();
    }
    return mixer;
  }, []);

  useFrame((_, delta) => {
    mixer.update(delta);
  });

  useEffect(() => {
    const influences = head.morphTargetInfluences;

    if (!influences) {
      console.error("No morphTargetInfluences");
      return;
    }

    const gui = new GUI();
    // gui.close();
    gui.domElement.style.zIndex = "100000000";

    const morphDict = head.morphTargetDictionary;
    if (!morphDict) {
      console.error("No morph target dictionary", head);
      return;
    }
    for (const [key, value] of Object.entries(morphDict)) {
      gui.add(influences, value.toString(), 0, 1, 0.01).name(key).listen(true);
    }
  }, []);
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <group position={[1.36, 0.4, -0.37]} rotation={[-0.12, -0.02, 0.16]}>
          <group position={[-3.29, 2.38, -2.61]} rotation={[0.15, -0.01, -0.1]}>
            <mesh
              geometry={nodes.eyeLeft.geometry}
              material={materials.lambert5}
            />
          </group>
          <group position={[3.29, 2.38, -2.61]} rotation={[0.15, -0.02, -0.15]}>
            <mesh
              geometry={nodes.eyeRight.geometry}
              material={materials.lambert5}
            />
          </group>
          <mesh geometry={nodes.teeth.geometry} material={materials.lambert5} />
          <mesh
            name="head"
            geometry={head.geometry}
            material={materials.lambert5}
            morphTargetDictionary={head.morphTargetDictionary}
            morphTargetInfluences={head.morphTargetInfluences}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(url);
